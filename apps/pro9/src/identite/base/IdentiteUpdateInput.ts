/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumIdentiteCivilite } from "./EnumIdentiteCivilite";
import {
  IsEnum,
  IsOptional,
  IsString,
  MaxLength,
  IsDate,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumIdentiteNationalite } from "./EnumIdentiteNationalite";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { SalarieWhereUniqueInput } from "../../salarie/base/SalarieWhereUniqueInput";
import { EnumIdentiteSexe } from "./EnumIdentiteSexe";

@InputType()
class IdentiteUpdateInput {
  @ApiProperty({
    required: false,
    enum: EnumIdentiteCivilite,
  })
  @IsEnum(EnumIdentiteCivilite)
  @IsOptional()
  @Field(() => EnumIdentiteCivilite, {
    nullable: true,
  })
  civilite?: "Homme" | "Femme" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  codeLieuNaissance?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  communeDeNaissance?: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateNaissance?: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  departementDeNaissance?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumIdentiteNationalite,
  })
  @IsEnum(EnumIdentiteNationalite)
  @IsOptional()
  @Field(() => EnumIdentiteNationalite, {
    nullable: true,
  })
  nationalite?: "Option1";

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nomNaissance?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nomUsuel?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  numeroInsee?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  paysDeNaissance?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  premierPrenom?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  prenoms?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  prenomUsuel?: string;

  @ApiProperty({
    required: false,
    type: () => SalarieWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SalarieWhereUniqueInput)
  @IsOptional()
  @Field(() => SalarieWhereUniqueInput, {
    nullable: true,
  })
  salarie?: SalarieWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    enum: EnumIdentiteSexe,
  })
  @IsEnum(EnumIdentiteSexe)
  @IsOptional()
  @Field(() => EnumIdentiteSexe, {
    nullable: true,
  })
  sexe?: "Feminin" | "Masculin" | null;
}

export { IdentiteUpdateInput as IdentiteUpdateInput };

/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AffectationWhereUniqueInput } from "../../affectation/base/AffectationWhereUniqueInput";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { AffectationListRelationFilter } from "../../affectation/base/AffectationListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { EnumStructureTypeField } from "./EnumStructureTypeField";
import { UtilisateurWhereUniqueInput } from "../../utilisateur/base/UtilisateurWhereUniqueInput";

@InputType()
class StructureWhereInput {
  @ApiProperty({
    required: false,
    type: () => AffectationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AffectationWhereUniqueInput)
  @IsOptional()
  @Field(() => AffectationWhereUniqueInput, {
    nullable: true,
  })
  affectationDomaine?: AffectationWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => AffectationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AffectationListRelationFilter)
  @IsOptional()
  @Field(() => AffectationListRelationFilter, {
    nullable: true,
  })
  affectations?: AffectationListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  code?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    enum: EnumStructureTypeField,
  })
  @IsEnum(EnumStructureTypeField)
  @IsOptional()
  @Field(() => EnumStructureTypeField, {
    nullable: true,
  })
  typeField?: "Agence" | "Association" | "Federation";

  @ApiProperty({
    required: false,
    type: () => UtilisateurWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UtilisateurWhereUniqueInput)
  @IsOptional()
  @Field(() => UtilisateurWhereUniqueInput, {
    nullable: true,
  })
  utilisateur?: UtilisateurWhereUniqueInput;
}

export { StructureWhereInput as StructureWhereInput };
